REPORT z_prat#k_02.

*PARAMETERS: p_num TYPE i.
*START-OF-SELECTION.
*  WRITE: / 'Girilen Say#:', p_num.
*  IF p_num >= 0 AND p_num <= 25.
*    WRITE: / '0 ile 25 aras#ndad#r!'.
*  ELSEIF p_num > 25 AND p_num <= 50.
*    WRITE: / '25 ile 50 aras#ndad#r!'.
*  ELSEIF p_num > 50 AND p_num <= 75.
*    WRITE: / '50 ile 75 aras#ndad#r!'.
*  ELSEIF p_num > 75 AND p_num <= 100.
*    WRITE: / '75 ile 100 aras#ndad#r!'.
*  ELSE.
*    WRITE: / '100 den büyüktür!'.
*  ENDIF.

*PARAMETERS: p_num TYPE i.
*START-OF-SELECTION.
** Geçersiz not kontrolü
*  IF p_num < 0 OR p_num > 100.
*    WRITE: / 'Yanl## not girdiniz!'.
*  ELSE.
*    WRITE: / 'Harf Notunuz:'.
*    * Harf notu belirleme
*    IF p_num >= 0 AND p_num <= 20.
*      WRITE: 'FF'.
*    ELSEIF p_num > 20 AND p_num <= 40.
*      WRITE: 'DD'.
*    ELSEIF p_num > 40 AND p_num <= 60.
*      WRITE: 'CC'.
*    ELSEIF p_num > 60 AND p_num <= 80.
*      WRITE: 'BB'.
*    ELSEIF p_num > 80 AND p_num <= 100.
*      WRITE: 'AA'.
*    ENDIF.
*  ENDIF.

*PARAMETERS: p_num1 TYPE i,
*            p_num2 TYPE i,
*            p_num3 TYPE i.
*START-OF-SELECTION.
*  IF ( p_num1 LT p_num2 AND p_num1 GT p_num3 ) OR ( p_num1 GT p_num2 AND p_num1 LT p_num3 ).
*    WRITE: 'Birinci say# di#er iki say#n#n ortas#ndad#r!'.
*  ELSEIF ( p_num2 LT p_num1 AND p_num2 GT p_num3 ) OR ( p_num2 GT p_num1 AND p_num2 LT p_num3 ).
*    WRITE: '#kinci say# di#er iki say#n#n ortas#ndad#r!'.
*  ELSEIF ( p_num3 LT p_num1 AND p_num3 GT p_num2 ) OR ( p_num3 GT p_num1 AND p_num3 LT p_num2 ).
*    WRITE: 'Üçüncü say# di#er iki say#n#n ortas#ndad#r!'.
*  ENDIF.


*PARAMETERS: p_num1 TYPE i,
*            p_num2 TYPE i,
*            p_pros TYPE char1.
*DATA: gv_result TYPE i.
*START-OF-SELECTION.
*  CASE p_pros.
*    WHEN '+'.
*      gv_result = p_num1 + p_num2.
*    WHEN '-'.
*      gv_result = p_num1 - p_num2.
*    WHEN '*'.
*      gv_result = p_num1 * p_num2.
*    WHEN '/'.
*      gv_result = p_num1 / p_num2.
*  ENDCASE.
*  WRITE: 'Sonuç: ', gv_result.


*PARAMETERS: p_2 AS CHECKBOX,
*            p_3 AS CHECKBOX,
*            p_5 AS CHECKBOX.
*DATA: gv_result TYPE i VALUE 10.
*START-OF-SELECTION.
*  IF p_2 EQ abap_true.
*    gv_result = gv_result + 2.
*  ENDIF.
*  IF p_3 EQ abap_true.
*    gv_result = gv_result + 3.
*  ENDIF.
*  IF p_5 EQ abap_true.
*    gv_result = gv_result + 5.
*  ENDIF.
*  WRITE: gv_result.


*PARAMETERS: p_num1 TYPE i,
*            p_num2 TYPE i.
*PARAMETERS: p_sum RADIOBUTTON GROUP gr1,
*            p_sub RADIOBUTTON GROUP gr1,
*            p_mul RADIOBUTTON GROUP gr1,
*            p_div RADIOBUTTON GROUP gr1.
*DATA: gv_result TYPE i.
*START-OF-SELECTION.
*  CASE abap_true.
*    WHEN p_sum.
*      gv_result = p_num1 + p_num2.
*    WHEN p_sub.
*      gv_result = p_num1 - p_num2.
*    WHEN p_mul.
*      gv_result = p_num1 * p_num2.
*    WHEN p_div.
*      gv_result = p_num1 / p_num2.
*  ENDCASE.
*
*  WRITE: gv_result.


PARAMETERS: p_num1 TYPE i,
            p_num2 TYPE i.
PARAMETERS: p_sum RADIOBUTTON GROUP gr1,
            p_sub RADIOBUTTON GROUP gr1,
            p_mul RADIOBUTTON GROUP gr1,
            p_div RADIOBUTTON GROUP gr1.
PARAMETERS: p_m10 AS CHECKBOX,
            p_d2  AS CHECKBOX.
DATA: gv_result TYPE i.
START-OF-SELECTION.
  CASE abap_true.
    WHEN p_sum.
      PERFORM sum_numbers.
    WHEN p_sub.
      PERFORM sub_numbers.
    WHEN p_mul.
      PERFORM mul_numbers.
    WHEN p_div.
      PERFORM div_numbers.
  ENDCASE.
  IF p_m10 EQ abap_true.
    gv_result = gv_result * 10.
  ENDIF.
  IF p_d2 EQ abap_true.
    gv_result = gv_result / 2.
  ENDIF.
  WRITE: gv_result.
FORM sum_numbers.
  gv_result = p_num1 + p_num2.
ENDFORM.
FORM sub_numbers.
  gv_result = p_num1 - p_num2.
ENDFORM.
FORM mul_numbers.
  gv_result = p_num1 * p_num2.
ENDFORM.
FORM div_numbers.
  gv_result = p_num1 / p_num2.
ENDFORM.
